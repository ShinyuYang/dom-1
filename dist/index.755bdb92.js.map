{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //template可以容纳任何内容,div不行\r\n    container.innerHTML = string.trim(); //trim避免空格出现影响,如果有空格,空格会被视为文本元素;trim可以自动剔除空格\r\n    return container.content.firstChild;\r\n    //以上是创建节点操作\r\n  },\r\n  after(node, node2) {\r\n    console.log(node.nextSibling);\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n    //用于新增弟弟\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n    //用于新增哥哥\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n    //用于新增儿子\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n    //用于新增爸爸,先把parent放在node的前面.再把node放到parent后面,这是appendChild的属性\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n    //用于删除节点\r\n  },\r\n  empty(node) {\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n      //回车,空格视为文本删除\r\n    }\r\n    return array;\r\n    //用于删除所有儿子\r\n  },\r\n  attr(node, name, value) {\r\n    //重载\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n\r\n    //增加(读写)属性\r\n  },\r\n  text(node, string) {\r\n    //这里用if else是为了适配所有浏览器\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string; //ie\r\n      } else {\r\n        node.textContent = string; //firefox chrome\r\n      } //修改text\r\n    } else if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        return (node.innerText = string); //ie\r\n      } else {\r\n        return (node.textContent = string); //firefox chrome\r\n      } //修改text\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    } //修改html\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.style[name] = value;\r\n      //dom.style(div,'color','red') 设置值\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        return node.style[name];\r\n        //dom.style(div,'color') 读值\r\n      } else if (name instanceof Object) {\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n          //dom.style(div,{color:'red'})设置值\r\n\r\n        }\r\n      }\r\n    }//修改or读style\r\n  },\r\n  class:{\r\n    add(node,className){\r\n        node.classList.add(className)//添加class\r\n    },\r\n    remove(node,className){\r\n        node.classList.remove(className)//删除class\r\n    },\r\n    has(node,className){\r\n        return node.classList.contains(className)\r\n    }//确认是否有某个类\r\n  },\r\n  on(node,eventName,fn){\r\n    node.addEventListener(eventName,fn)\r\n    //添加事件监听\r\n},\r\n  off(node,eventName,fn){\r\n    node.removeEventListener(eventName,fn)\r\n    //删除事件监听\r\n},\r\n  find(selector,scope){\r\n    return (scope || document).querySelectorAll(selector)\r\n    //获取标签\r\n  },\r\n  parent(node){\r\n    return node.parentNode\r\n  },//获取自己的父元素\r\n\r\n  children(node){\r\n    return node.children\r\n  },//获取自己的子元素\r\n  siblings(node){\r\n    return Array.from(node.parentNode.children)\r\n    .filter(n=>n!==node)\r\n  },//获取所有兄弟节点(除去自己)\r\n  next(node){\r\n    let x=node.nextSibling\r\n    while(x && x.nodeType===3){\r\n        x=x.nextSibling\r\n    }\r\n    return x\r\n  },//获取弟弟节点\r\n  previous(node){\r\n    let x=node.previousSibling\r\n    while(x && x.nodeType===3){\r\n        x=x.previousSibling\r\n    }\r\n    return x\r\n  },//获取哥哥节点\r\n  each(nodeList,fn){\r\n    for(let i=0;i<nodeList.length;i++){\r\n        fn.call(null,nodeList[i])\r\n    }//遍历所有节点\r\n},\r\nindex(node){\r\n    const list=dom.children(node.parentNode)\r\n    let i\r\n    for(i=0;i<list.length;i++){\r\n        if(list[i]===node){\r\n            break\r\n        }\r\n    }\r\n    return i//返回元素是第几个,获取排行\r\n}\r\n};\r\n"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}